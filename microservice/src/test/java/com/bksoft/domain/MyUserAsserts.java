package com.bksoft.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MyUserAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMyUserAllPropertiesEquals(MyUser expected, MyUser actual) {
        assertMyUserAutoGeneratedPropertiesEquals(expected, actual);
        assertMyUserAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMyUserAllUpdatablePropertiesEquals(MyUser expected, MyUser actual) {
        assertMyUserUpdatableFieldsEquals(expected, actual);
        assertMyUserUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMyUserAutoGeneratedPropertiesEquals(MyUser expected, MyUser actual) {
        assertThat(actual)
            .as("Verify MyUser auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMyUserUpdatableFieldsEquals(MyUser expected, MyUser actual) {
        assertThat(actual)
            .as("Verify MyUser relevant properties")
            .satisfies(a -> assertThat(a.getIdUser()).as("check idUser").isEqualTo(expected.getIdUser()))
            .satisfies(a -> assertThat(a.getUserName()).as("check userName").isEqualTo(expected.getUserName()))
            .satisfies(a -> assertThat(a.getPassword()).as("check password").isEqualTo(expected.getPassword()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMyUserUpdatableRelationshipsEquals(MyUser expected, MyUser actual) {
        // empty method
    }
}
